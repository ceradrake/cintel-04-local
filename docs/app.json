[{"name": "app.py", "content": "import plotly.express as px\nfrom shiny.express import input, ui\nfrom shinywidgets import render_plotly\nimport palmerpenguins\nimport seaborn as sns\nfrom shiny import render\nimport shinyswatch\nfrom shiny import reactive\n\npenguins_df = palmerpenguins.load_penguins()\n\nui.page_opts(title=\"Cera's Palmer Penguins Data\", fillable=True)\nwith ui.sidebar(open = \"open\"):\n    ui.h2(\"Sidebar\")\n    ui.input_selectize(\n        \"selected_attribute\",\n        \"Select Attribute\",\n        [\"bill_length_mm\", \"bill_depth_mm\", \"flipper_length_mm\", \"body_mass_g\"]\n    )\n    ui.input_numeric(\"plotly_bin_count\", \"Plotly Bin Count\", 50)\n    ui.input_slider(\"seaborn_bin_count\", \"Seaborn Bin Count\", 0, 100, 50)\n    ui.input_checkbox_group(\"selected_species_list\", \"List of Selected Species\", [\"Adelie\", \"Gentoo\", \"Chinstrap\"],selected= [\"Gentoo\"], inline= False)\n    ui.hr()\n    ui.input_checkbox_group(\"selected_island_list\", \"List of Selected Islands\", [\"Torgerson\", \"Biscoe\", \"Dream\"], selected= [\"Dream\"], inline= False)\n    ui.a(\"Cera's GitHub\", href= \"https://github.com/ceradrake/cintel_02-data/tree/main\", target= \"_blank\")\n\n#Data Table and Data Grid\nwith ui.layout_columns():\n    with ui.card(full_screen=True):\n        ui.h2(\"Penguin Data Table\")\n    @render.data_frame\n    def penguins_datatable():\n        return render.DataTable(filtered_data())\n    ui.h2(\"Penguin Data Grid\")\n    @render.data_frame\n    def penguins_datagrid():\n        return render.DataGrid(filtered_data())\n\n#Plotly Histogram\nwith ui.layout_columns():\n    with ui.card(full_screen=True):\n        ui.h2(\"Species Histogram\")\n    @render_plotly\n    def plotly_histogram():\n        return px.histogram(filtered_data(), x=\"bill_length_mm\",\n                color=\"species\")\n#Seaborn Histogram\nui.h2(\"Seaborn Histogram\")\n@render.plot\ndef plot_sns():\n return sns.histplot(filtered_data(), x=\"body_mass_g\", hue = 'species')\n\n#Plotly Scatterplot\nwith ui.card(full_screen = True):\n    ui.card_header(\"Plotly Scatterplot: Species\")\n    @render_plotly\n    def plotly_scatterplot():\n        return px.scatter(\n            filtered_data(), x=\"body_mass_g\", y=\"flipper_length_mm\", color = \"species\", symbol = \"sex\", title = \"Body Mass based on Sex and Species\"\n        )\n    \nshinyswatch.theme.journal()\n@reactive.calc\ndef filtered_data():\n    return penguins_df[penguins_df[\"species\"].isin(input.selected_species_list())]\n", "type": "text"}]